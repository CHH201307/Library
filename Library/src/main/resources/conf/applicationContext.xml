<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/cache
  						http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
  						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.ch.*" >  
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>
    <!-- 引入配置文件 -->  
    <bean class="com.ch.properties.PropertiesUtil">
		<property name="locations">
			<list>
				<value>classpath*:*.properties</value>
			</list>
		</property>
	</bean>
	
	
	<bean id="sqlsessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="BATCH"></constructor-arg>
	</bean>
	

  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${maxWait}"></property>  
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
       <!--  <property name="configLocation" value="classpath:conf/mybatis-config.xml"></property> -->
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations">
        	<list>
        		<value>classpath:mapper/*.xml</value>
        	</list>
        </property> 
        <property name="plugins">
			<array>
			  <bean class="com.github.pagehelper.PageInterceptor">
			    <property name="properties">
			      <!--使用下面的方式配置参数，一行配置一个 -->
			      <value>
			        helperDialect=mysql
			      </value>
			    </property>
			  </bean>
			</array>
		 </property>
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.ch.dao.*" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
    
    
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
    	<tx:attributes>
    		<tx:method name="*save" propagation="REQUIRED"/>
    		<tx:method name="*update" propagation="REQUIRED"/>
    		<tx:method name="*delete" propagation="REQUIRED"/>
    		<tx:method name="*list" propagation="SUPPORTS" read-only="true" />
    	</tx:attributes>
    </tx:advice>
    
    <aop:config>
    	<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.ch.*.service.*.*(..))"/>
    </aop:config>
    
    
    <!--缓存配置  -->
    <cache:annotation-driven cache-manager="cacheManager" />  
    

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
        <property name="cacheManager" ref="ehcache"></property>  
    </bean>  

    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:cache/ehcache.xml"></property>  
    </bean>  
    
    
    
    
    
    <!-- <bean id="myFactBean" class="com.ch.factoryBean.MyFactoryBean"></bean> -->
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
</beans>